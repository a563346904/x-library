import js from '@eslint/js';
import configPrettier from 'eslint-config-prettier';
import pluginImport from 'eslint-plugin-import';
import pluginPrettier from 'eslint-plugin-prettier';
import pluginVue from 'eslint-plugin-vue';
import globals from 'globals';
import tseslint from 'typescript-eslint';

// 项目特有的忽略项
const projectSpecificIgnores = [
  '.turbo/**', // Turbo 构建缓存目录
  'pnpm-lock.yaml' // pnpm 的依赖锁定文件
];

// 基础忽略配置
const baseIgnores = {
  ignores: [
    // 依赖和包管理
    'node_modules/**',
    '**/node_modules/**',

    // 构建产物目录
    'dist/**',
    '**/dist/**',
    'build/**',
    '**/build/**',
    'out/**',
    '**/out/**',

    // 自动生成的文件
    '**/*.d.ts',

    // 测试和覆盖率
    'coverage/**',
    '**/coverage/**',

    // 缓存文件
    '.eslintcache',
    '**/.eslintcache',

    // 日志文件
    '*.log',
    'logs/**',
    '**/logs/**',

    // 系统生成文件
    '.DS_Store',
    '.DS_Store?',
    '._*',
    'Thumbs.db',

    // 编辑器临时文件
    '*.swp',
    '*.swo',
    '*~',

    // 环境配置文件
    '.env',
    '.env.*',

    // 项目特有忽略项
    ...projectSpecificIgnores
  ]
};

export default [
  // 首先应用忽略配置
  baseIgnores,

  // ===================================
  // 基础配置
  // ===================================
  js.configs.recommended,
  ...tseslint.configs.recommended,

  // ===================================
  // JavaScript/TypeScript 文件配置
  // ===================================
  {
    files: ['**/*.{js,mjs,cjs,ts,tsx}'],
    languageOptions: {
      ecmaVersion: 'latest',
      sourceType: 'module',
      globals: {
        ...globals.browser,
        ...globals.node,
        ...globals.es2020
      }
    },
    plugins: {
      import: pluginImport
    },
    rules: {
      // ===== Import 管理规则 =====
      'import/newline-after-import': 'error',
      'import/no-duplicates': 'error',
      'import/order': [
        'error',
        {
          groups: ['builtin', 'external', 'internal', 'parent', 'sibling', 'index'],
          'newlines-between': 'always',
          alphabetize: { order: 'asc', caseInsensitive: true }
        }
      ],
      'sort-imports': [
        'error',
        {
          ignoreCase: true,
          ignoreDeclarationSort: true,
          ignoreMemberSort: false,
          memberSyntaxSortOrder: ['none', 'all', 'multiple', 'single'],
          allowSeparatedGroups: false
        }
      ],

      // ===== 代码质量规则 =====
      'no-var': 'error',
      'object-shorthand': 'error',
      'prefer-const': 'error',
      'prefer-template': 'error',

      // ===== 安全性规则 =====
      'no-caller': 'error',
      'no-eval': 'error',
      'no-extend-native': 'error',
      'no-implied-eval': 'error',
      'no-new-func': 'error',
      'no-proto': 'error',
      'no-return-assign': 'error',
      'no-script-url': 'error',
      'no-throw-literal': 'error',

      // ===== 错误处理规则 =====
      'default-case': 'warn',
      'no-empty': ['error', { allowEmptyCatch: false }],
      'no-empty-function': 'warn',
      'no-fallthrough': 'error',
      'no-unreachable': 'error',
      'no-unused-expressions': 'error',

      // ===== 命名约定规则 =====
      camelcase: ['error', { properties: 'never', ignoreDestructuring: true }],
      'new-cap': ['error', { newIsCap: true, capIsNew: false }],
      'no-underscore-dangle': [
        'warn',
        { allowAfterThis: true, allow: ['_id', '__dirname', '__filename'] }
      ],

      // ===== 性能优化规则 =====
      'no-array-constructor': 'error',
      'no-loop-func': 'error',
      'no-new-object': 'error',
      'no-new-wrappers': 'error',

      // ===== 代码维护性规则 =====
      complexity: ['warn', 10],
      'max-depth': ['warn', 4],
      'max-lines-per-function': ['warn', 50],
      'max-params': ['warn', 4],

      // ===== TypeScript 规则 =====
      '@typescript-eslint/no-explicit-any': 'warn',
      '@typescript-eslint/no-unused-vars': [
        'error',
        {
          argsIgnorePattern: '^_',
          varsIgnorePattern: '^_'
        }
      ]
    }
  },

  // ===================================
  // Vue 项目配置
  // ===================================
  {
    files: ['**/*.{js,mjs,jsx,vue}'],
    languageOptions: {
      globals: globals.browser
    },
    plugins: {
      import: pluginImport,
      prettier: pluginPrettier,
      vue: pluginVue
    },
    rules: {
      // ===== 基础格式化规则 =====
      'prettier/prettier': 'error',
      semi: ['error', 'always'],

      // ===== Vue 基础规则 =====
      'vue/component-name-in-template-casing': ['error', 'PascalCase'],
      'vue/multi-word-component-names': 'off',
      'vue/no-setup-props-destructure': 'off',
      'vue/no-v-html': 'warn',
      'vue/require-default-prop': 'off',
      'vue/require-explicit-emits': 'error',

      // ===== Vue 属性和命名规则 =====
      'vue/attribute-hyphenation': ['error', 'always'],
      'vue/custom-event-name-casing': ['error', 'kebab-case'],
      'vue/prop-name-casing': ['error', 'camelCase'],

      // ===== Vue Composition API 规则 =====
      'vue/define-emits-declaration': ['error', 'type-literal'],
      'vue/define-props-declaration': ['error', 'type-based'],
      'vue/no-boolean-default': ['error', 'default-false'],
      'vue/no-ref-as-operand': 'error',
      'vue/no-watch-after-await': 'error',
      'vue/prefer-define-options': 'error',
      'vue/require-macro-variable-name': 'error',

      // ===== Vue 最佳实践规则 =====
      'vue/no-duplicate-attr-inheritance': 'error',
      'vue/no-empty-component-block': 'error',
      'vue/no-multiple-objects-in-class': 'error',
      'vue/no-static-inline-styles': 'warn',
      'vue/no-useless-mustaches': 'error',
      'vue/no-useless-v-bind': 'error',
      'vue/prefer-separate-static-class': 'error'
    }
  },

  // ===================================
  // Vue 文件专用配置
  // ===================================
  ...pluginVue.configs['flat/recommended'].map(config => ({
    ...config,
    files: ['**/*.vue']
  })),

  // ===================================
  // Prettier 配置（必须放在最后）
  // ===================================
  {
    files: ['**/*.{js,mjs,jsx,ts,tsx,vue}'],
    ...configPrettier
  }
];
